{
  "name": "cmsis-debug-adapter",
  "version": "1.0.0",
  "description": "Debug adapter for CMSIS following the DAP protocol",
  "author": "Rob Moran <rob.moran@arm.com>",
  "license": "MIT",
  "private": true,
  "main": "./lib/index",
  "repository": {
    "type": "git",
    "url": "git://github.com/ARMmbed/cmsis-debug-adapter"
  },
  "engines": {
    "node": ">=10.2.1"
  },
  "scripts": {
    "prepare": "yarn run build",
    "build": "tsc",
    "watch": "tsc -w",
    "lint": "tslint --fix --project tsconfig.json"
  },
  "dependencies": {
    "@types/node": "^12.12.14",
    "cdt-gdb-adapter": "0.0.15-next.20191220232242.2160d3c.0",
    "vscode-debugadapter": "^1.37.0",
    "vscode-debugprotocol": "^1.37.0"
  },
  "devDependencies": {
    "tslint": "^5.20.1",
    "tslint-eslint-rules": "^5.4.0",
    "typescript": "^3.7.3"
  },
  "bundledDependencies": [
    "cdt-gdb-adapter"
  ],
  "publisher": "Arm Mbed",
  "activationEvents": [
    "onDebugResolve:cmsis-debug"
  ],
  "contributes": {
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      }
    ],
    "debuggers": [
      {
        "type": "cmsis-debug",
        "label": "CMSIS Debug",
        "program": "./lib/index.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Path to the program to be launched",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "arguments": {
                "type": "string",
                "description": "Arguments for the program"
              },
              "runToMain": {
                "description": "If enabled the debugger will run until the start of the main function.",
                "type": "boolean",
                "default": false
              },
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "arm-none-eabi-gdb"
              },
              "gdbArguments": {
                "description": "Additional arguments to pass to GDB command line",
                "type": "array",
                "default": []
              },
              "gdbCore": {
                "description": "Core number gdb will connect to",
                "type": "number",
                "default": 0
              },
              "gdbServer": {
                "type": "string",
                "description": "Path to gdb server",
                "default": "pyocd"
              },
              "gdbServerArguments": {
                "description": "Additional arguments to pass to GDB server",
                "type": "array",
                "default": []
              },
              "gdbServerEnv": {
                "description": "GDB server process env",
                "type": "object"
              },
              "objdump": {
                "type": "string",
                "description": "Path to objdump executable",
                "default": "arm-none-eabi-objdump"
              },
              "initCommands": {
                "description": "Extra gdb commands to run after initialisation",
                "type": "array",
                "default": []
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              }
            }
          },
          "attach": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Path to the program to be launched",
                "default": "${workspaceFolder}/${command:askProgramPath}"
              },
              "arguments": {
                "type": "string",
                "description": "Arguments for the program"
              },
              "runToMain": {
                "description": "If enabled the debugger will run until the start of the main function.",
                "type": "boolean",
                "default": false
              },
              "gdb": {
                "type": "string",
                "description": "Path to gdb",
                "default": "arm-none-eabi-gdb"
              },
              "gdbArguments": {
                "description": "Additional arguments to pass to GDB command line",
                "type": "array",
                "default": []
              },
              "gdbCore": {
                "description": "Core number gdb will connect to",
                "type": "number",
                "default": 0
              },
              "gdbServer": {
                "type": "string",
                "description": "Path to gdb server",
                "default": "pyocd"
              },
              "gdbServerArguments": {
                "description": "Additional arguments to pass to GDB server",
                "type": "array",
                "default": []
              },
              "gdbServerEnv": {
                "description": "GDB server process env",
                "type": "object"
              },
              "objdump": {
                "type": "string",
                "description": "Path to objdump executable",
                "default": "arm-none-eabi-objdump"
              },
              "initCommands": {
                "description": "Extra gdb commands to run after initialisation",
                "type": "array",
                "default": []
              },
              "verbose": {
                "type": "boolean",
                "description": "Produce verbose log output",
                "default": "false"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "cmsis-debug",
            "name": "CMSIS Debug",
            "request": "launch",
            "program": "./bin/executable.elf"
          }
        ]
      }
    ]
  }
}
